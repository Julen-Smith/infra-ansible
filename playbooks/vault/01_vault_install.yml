---
- name: Create Vault configuration templates
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Create templates directory
      file:
        path: "{{ playbook_dir }}/templates"
        state: directory
        mode: 0755
      
    - name: Create Vault HCL template
      copy:
        content: |
          ui = {{ vault_ui_enabled | default('true') | string | lower }}
          
          storage "file" {
            path = "{{ vault_data_dir | default('/opt/vault/data') }}"
          }
          
          listener "tcp" {
            address     = "{{ vault_listener_tcp_address | default('0.0.0.0:8200') }}"
            tls_disable = {{ vault_listener_tcp_tls_disable | default(1) }}
          }
          
          api_addr = "{{ vault_api_addr | default('http://127.0.0.1:8200') }}"
          cluster_addr = "http://{{ ansible_host | default('127.0.0.1') }}:8201"
          
          disable_mlock = {{ vault_disable_mlock | default('true') | string | lower }}
          
          log_level = "INFO"
          log_file = "{{ vault_log_dir | default('/opt/vault/logs') }}/vault.log"
        dest: "{{ playbook_dir }}/templates/vault.hcl.j2"
        mode: 0644
      
    - name: Create Vault service template
      copy:
        content: |
          [Unit]
          Description=HashiCorp Vault Service
          Documentation=https://www.vaultproject.io/docs/
          Requires=network-online.target
          After=network-online.target
          
          [Service]
          User={{ vault_user | default('vault') }}
          Group={{ vault_group | default('vault') }}
          ProtectSystem=full
          ProtectHome=read-only
          PrivateTmp=yes
          PrivateDevices=yes
          SecureBits=keep-caps
          AmbientCapabilities=CAP_IPC_LOCK
          Capabilities=CAP_IPC_LOCK+ep
          CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
          NoNewPrivileges=yes
          ExecStart=/usr/local/bin/vault server -config={{ vault_config_dir | default('/etc/vault.d') }}/vault.hcl
          ExecReload=/bin/kill --signal HUP $MAINPID
          KillMode=process
          KillSignal=SIGINT
          Restart=on-failure
          RestartSec=5
          TimeoutStopSec=30
          StartLimitIntervalSec=60
          StartLimitBurst=3
          LimitNOFILE=65536
          LimitMEMLOCK=infinity
          
          [Install]
          WantedBy=multi-user.target
        dest: "{{ playbook_dir }}/templates/vault.service.j2"
        mode: 0644

- name: Install HashiCorp Vault
  hosts: vault
  become: yes
  vars:
    vault_version: "1.15.2"
    vault_download_url: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip"
    
    vault_user: "vault"
    vault_group: "vault"
    
    vault_base_dir: "/opt/vault"
    vault_config_dir: "/etc/vault.d"
    vault_data_dir: "/opt/vault/data"
    vault_log_dir: "/opt/vault/logs"
    
    vault_ui_enabled: true
    vault_disable_mlock: true
    vault_listener_tcp_address: "0.0.0.0:8200"
    vault_listener_tcp_tls_disable: 1
    vault_api_addr: "http://{{ ansible_host }}:8200"
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
      
    - name: Install required packages (Debian/Ubuntu)
      apt:
        name: 
          - unzip
          - curl
          - jq
          - python3-apt
        state: present
      when: ansible_os_family == "Debian"
      
    - name: Install required packages (RedHat/CentOS)
      yum:
        name: 
          - unzip
          - curl
          - jq
        state: present
      when: ansible_os_family == "RedHat"
      
    - name: Create Vault user
      user:
        name: "{{ vault_user }}"
        system: yes
        create_home: no
        shell: /bin/false
        
    - name: Create Vault directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        mode: 0750
      loop:
        - "{{ vault_base_dir }}"
        - "{{ vault_data_dir }}"
        - "{{ vault_log_dir }}"
        - "{{ vault_config_dir }}"
        
    - name: Download Vault
      get_url:
        url: "{{ vault_download_url }}"
        dest: /tmp/vault.zip
        mode: 0644
        
    - name: Extract Vault
      unarchive:
        src: /tmp/vault.zip
        dest: /usr/local/bin
        remote_src: yes
        mode: 0755
        owner: root
        group: root
        
    - name: Create Vault configuration
      template:
        src: "templates/vault.hcl.j2"
        dest: "{{ vault_config_dir }}/vault.hcl"
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        mode: 0640
      notify: restart vault
      
    - name: Create Vault systemd service
      template:
        src: "templates/vault.service.j2"
        dest: /etc/systemd/system/vault.service
        owner: root
        group: root
        mode: 0644
      notify: systemd daemon reload
        
    - name: Start and enable Vault service
      systemd:
        name: vault
        state: started
        enabled: yes
        daemon_reload: yes
        
    - name: Wait for Vault to start
      wait_for:
        port: 8200
        delay: 5
        timeout: 30
        
    - name: Check Vault status
      command: vault status
      environment:
        VAULT_ADDR: "http://localhost:8200"
      register: vault_status
      failed_when: false
      changed_when: false
      become: no
      
    - name: Show Vault status
      debug:
        var: vault_status.stdout_lines
      when: vault_status.rc == 0
      
    - name: Show Vault initialization instructions
      debug:
        msg: 
          - "Vault has been installed but needs to be initialized."
          - "To initialize Vault, run the next playbook:"
          - "ansible-playbook -i inventory/hosts.ini playbooks/vault/02_vault_initialize.yml"
      when: vault_status.rc != 0
        
  handlers:
    - name: systemd daemon reload
      systemd:
        daemon_reload: yes
        
    - name: restart vault
      systemd:
        name: vault
        state: restarted